1. Revision of Class IX Syllabus.
	a. Introduction to Object Oriented Programming concepts.
	b. Elementary Concept of Objects and Classes.
	c. Values and Data types.
	d. Operators in Java.
	e. Input in Java.
	f. Mathematical Library Methods.
	g. Conditional constructs in Java.
	h. Iterative constructs in Java.
	i. Nested for loops.
	
2. Class as the Basis of all Computation Objects and Classes.
	a. Objects and encapsulation concepts.
	b. Member variables.						
	c. Attributes or features.
	d. Variables define state.
	e. Member methods.

3. User Defined Methods.
	a. Need of methods.
	b. Syntax of methods.
	c. Method definition.
	d. Method calling.
	e. Method overloading.
	f. Actual parameters and formal parameters.
	g. Static and non-static methods.
	h. Pure and impure methods.

4.  Constructors.
	a. Definition of Constructor
	b. Characteristics and types of constructors
			Default constructor.
			Parameterized constructor.
	c. Uses of constructors.
	d. Constructor overloading.
	e. Differences between constructor and method.

5. Library classes
	a. Introduction to wrapper classes.
	b. Methods of Wrapper Class and Their Usage.
	c. Autoboxing and  Unboxing in wrapper classes.
	d. Class as a composite type.
	e. Distinction between primitive data type and composite data type
	f. Inbuilt methods.
			int parseInt(String s)
			long parseLong(String s)
			float parseFloat(String s)
			double parseDouble(String s)
			boolean isDigit(char ch)
			boolean isLetter(char ch)
			boolean isLetterOrDigit(char ch)
			boolean isLowerCase(char ch)
			boolean isUpperCase(char ch)
			boolean isWhitespace(char ch)
			char toLowerCase (char ch)
			char toUpperCase(char ch)
6. Encapsulation
	a. Access specifiers and its scope and visibility.
			private 
			protected
			public.
	b. Visibility rules for private, protected and public access specifiers.  
	c. Scope of variables.
	d. Class variables.
	e. Instance variables.
	f. Argument variables.
	g. Local variables.
	
 7. Arrays
	a. Definition of an array.
	b. Types of arrays.
			Single Dimensional arrays
			Double dimensional arrays
	c. Arrays and their uses.
	d. Sorting techniques.
			Selection sort
			Bubble sort
	e. Search techniques.
			Linear search
			Binary search
	f. Array as a composite type.
	g. Programs based on Sorting and Searching techniques.
	
 8. String handling.
	a. String class.
	b. Methods of String class.
	c. Implementation of String class methods.
	d. String array
	e. String class methods.
			String trim ()
			String toLowerCase()
			String toUpperCase()
			int length( )
			char charAt(int n)
			int indexOf(char ch)
			int lastIndexOf(char ch)
			String concat(String str)
			boolean equals (String str)
			boolean equalsIgnoreCase(String str)
			int compareTo(String str)
			int compareToIgnoreCase(String str)
			String replace (char oldChar,char newChar)
			String substring (int beginIndex)
			String substring (int beginIndex, int endIndex)
			boolean startsWith(String str)
			boolean endsWith(String str)
			String valueOf(all types)
	f. Programs based on the above methods
			Extracting and modifying characters of a string.
			Alphabetical order of the strings in an array.
			Searching for a string using linear search technique.

9. Programs.
		Programs depicting the concept of pure, impure, static, non- static methods.
		Programs based on overloaded methods.
		Programs based on methods invoking the methods.
		Programs based on different types of constructors mentioned in the scope of the syllabus.
		Programs / outputs based on constructor overloading
		Programs based on Library class methods.
		Programs to check whether a given character is an uppercase/ lowercase / digit etc.
		Programs for Encapsulation concepts.
		Programs based concepts of variables like local, instance, arguments, private, public, class variable etc.
		Programs based Array Concepts.
		Programs based on sorting techniques.
		Programs based on search techniques.
		Programs on Double dimensional arrays
		Programs on String handling.
		Outputs based on all the string methods.
		Programs based on extracting the characters from a given string and manipulating the same.
		Palindrome string, pig Latin, alphabetical order of characters, etc.